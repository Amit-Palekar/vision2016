// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: vision_data.proto

#ifndef PROTOBUF_vision_5fdata_2eproto__INCLUDED
#define PROTOBUF_vision_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace y2017 {
namespace vision {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_vision_5fdata_2eproto();
void protobuf_AssignDesc_vision_5fdata_2eproto();
void protobuf_ShutdownFile_vision_5fdata_2eproto();

class VisionData;

// ===================================================================

class VisionData : public ::google::protobuf::Message {
 public:
  VisionData();
  virtual ~VisionData();

  VisionData(const VisionData& from);

  inline VisionData& operator=(const VisionData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VisionData& default_instance();

  void Swap(VisionData* other);

  // implements Message ----------------------------------------------

  VisionData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VisionData& from);
  void MergeFrom(const VisionData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 image_timestamp = 1;
  inline bool has_image_timestamp() const;
  inline void clear_image_timestamp();
  static const int kImageTimestampFieldNumber = 1;
  inline ::google::protobuf::int64 image_timestamp() const;
  inline void set_image_timestamp(::google::protobuf::int64 value);

  // optional int64 send_timestamp = 2;
  inline bool has_send_timestamp() const;
  inline void clear_send_timestamp();
  static const int kSendTimestampFieldNumber = 2;
  inline ::google::protobuf::int64 send_timestamp() const;
  inline void set_send_timestamp(::google::protobuf::int64 value);

  // optional double yaw = 3;
  inline bool has_yaw() const;
  inline void clear_yaw();
  static const int kYawFieldNumber = 3;
  inline double yaw() const;
  inline void set_yaw(double value);

  // @@protoc_insertion_point(class_scope:y2017.vision.VisionData)
 private:
  inline void set_has_image_timestamp();
  inline void clear_has_image_timestamp();
  inline void set_has_send_timestamp();
  inline void clear_has_send_timestamp();
  inline void set_has_yaw();
  inline void clear_has_yaw();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 image_timestamp_;
  ::google::protobuf::int64 send_timestamp_;
  double yaw_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_vision_5fdata_2eproto();
  friend void protobuf_AssignDesc_vision_5fdata_2eproto();
  friend void protobuf_ShutdownFile_vision_5fdata_2eproto();

  void InitAsDefaultInstance();
  static VisionData* default_instance_;
};
// ===================================================================


// ===================================================================

// VisionData

// optional int64 image_timestamp = 1;
inline bool VisionData::has_image_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VisionData::set_has_image_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VisionData::clear_has_image_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VisionData::clear_image_timestamp() {
  image_timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_image_timestamp();
}
inline ::google::protobuf::int64 VisionData::image_timestamp() const {
  return image_timestamp_;
}
inline void VisionData::set_image_timestamp(::google::protobuf::int64 value) {
  set_has_image_timestamp();
  image_timestamp_ = value;
}

// optional int64 send_timestamp = 2;
inline bool VisionData::has_send_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VisionData::set_has_send_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VisionData::clear_has_send_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VisionData::clear_send_timestamp() {
  send_timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_send_timestamp();
}
inline ::google::protobuf::int64 VisionData::send_timestamp() const {
  return send_timestamp_;
}
inline void VisionData::set_send_timestamp(::google::protobuf::int64 value) {
  set_has_send_timestamp();
  send_timestamp_ = value;
}

// optional double yaw = 3;
inline bool VisionData::has_yaw() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VisionData::set_has_yaw() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VisionData::clear_has_yaw() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VisionData::clear_yaw() {
  yaw_ = 0;
  clear_has_yaw();
}
inline double VisionData::yaw() const {
  return yaw_;
}
inline void VisionData::set_yaw(double value) {
  set_has_yaw();
  yaw_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace vision
}  // namespace y2017

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_vision_5fdata_2eproto__INCLUDED
